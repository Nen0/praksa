# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:    
    AppBundle\Form\SearchParametersType:
        arguments: ['@doctrine.orm.entity_manager']
        tags: [form.type]
        public: true
    AppBundle\Form\UserType:
        arguments: ['@doctrine.orm.entity_manager']
        tags: [user.type]
        public: true
    app.user_repository:
        class: AppBundle\Repository\UserRepository
        arguments: ['AppBundle:User']
        public: true
        factory: ['@doctrine.orm.entity_manager', getRepository]
    # default configuration for services in *this* file    
    app.form_login_authenticator:
        class: AppBundle\Security\FormLoginAuthenticator
        arguments: ["@router", "@security.password_encoder"]
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']
